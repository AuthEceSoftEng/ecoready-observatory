version: "3.5"

services:
  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    container_name: kafka1
    restart: always
    ports:
      - "59092:59092"
      - "29093:29093"
      - "19092:19092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:SASL_PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'BROKER://ip2:19092,EXTERNAL://ip2:59092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@ip2:29093,2@ip1:29094'
      KAFKA_LISTENERS: 'BROKER://0.0.0.0:19092,CONTROLLER://0.0.0.0:29093,EXTERNAL://0.0.0.0:59092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'BROKER'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: 'YBAQFynBRF6fEUbg_J3u7A'
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/configs/kafka_server_jaas.conf"
      KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_SUPER_USERS: User:Admin;User:ANONYMOUS
    volumes:
       - ./kafka.jaas.conf:/etc/kafka/configs/kafka_server_jaas.conf

  kafka2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka2
    container_name: kafka2
    restart: always
    ports:
      - "59192:59092"
      - "29094:29094"
      - "19093:19093"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:SASL_PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'BROKER://ip1:19093,EXTERNAL://ip1:59192'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@ip2:29093,2@ip1:29094'
      KAFKA_LISTENERS: 'BROKER://0.0.0.0:19093,CONTROLLER://0.0.0.0:29094,EXTERNAL://0.0.0.0:59192'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'BROKER'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: 'YBAQFynBRF6fEUbg_J3u7A'
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/configs/kafka_server_jaas.conf"
      KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_SUPER_USERS: User:Admin;User:ANONYMOUS
    volumes:
      - ./kafka.jaas.conf:/etc/kafka/configs/kafka_server_jaas.conf

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui-kraft
    ports:
      - '18080:8080'
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=ip2:19092,ip1:19093
      - AUTH_TYPE=LOGIN_FORM
      - SPRING_SECURITY_USER_NAME=user_eco
      - SPRING_SECURITY_USER_PASSWORD=pass_eco

  cassandra1:
    image: cassandra:4.1.0
    container_name: cassandra1
    restart: always
    ports:
      - '9042:9042'
      - '7000:7000'
    environment:
      - CASSANDRA_CLUSTER_NAME=MyCassandraCluster
      - CASSANDRA_SEEDS=ip2,ip1
      - CASSANDRA_BROADCAST_ADDRESS=ip2
      - CASSANDRA_LISTEN_ADDRESS=cassandra1
    volumes:
      - ./cassandra1_data:/var/lib/cassandra

  cassandra2:
    image: cassandra:4.1.0
    container_name: cassandra2
    restart: always
    ports:
      - '9042:9042'
      - '7000:7000'
    environment:
      - CASSANDRA_CLUSTER_NAME=MyCassandraCluster
      - CASSANDRA_SEEDS=ip2,ip1
      - CASSANDRA_BROADCAST_ADDRESS=ip1
      - CASSANDRA_LISTEN_ADDRESS=cassandra2
    volumes:
      - ./cassandra2_data:/var/lib/cassandra

  cassandra-ui:
    image: ipushc/cassandra-web
    environment:
      - CASSANDRA_HOST=ip2,ip1
      - CASSANDRA_PORT=9042
      - CASSANDRA_USERNAME=cassandra
      - CASSANDRA_PASSWORD=cassandra
    ports:
      - "3000:8083" 
  zoo1:
    image: zookeeper
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
      - 8680:8080
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=ip1:2888:3888;2181 server.3=ip1:2889:3889;2182
  zoo2:
    image: zookeeper
    restart: always
    hostname: zoo2
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=ip2:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=ip1:2889:3889;2182

  zoo3:
    image: zookeeper
    restart: always
    hostname: zoo3
    ports:
      - 2182:2181
      - 2889:2888
      - 3889:3888
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=ip2:2888:3888;2181 server.2=ip1:2888:3888;2181 server.3=0.0.0.0:2889:3889;2182


  jobmanager1:
    image: pyflink:latest
    restart: always
    ports:
      - "8081:8081"
      - "46987:46987"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager1
      - |
        FLINK_PROPERTIES=jobmanager.rpc.address: jobmanager1
        high-availability.type: zookeeper
        high-availability.storageDir: ./recovery
        high-availability.zookeeper.quorum: ip2:2181,ip1:2181,ip1:2182
        high-availability.zookeeper.path.root: /flink
        high-availability.cluster-id: /cluster
        jobmanager.rpc.address: ip2
        jobmanager.rpc.bind-port: 46987
        jobmanager.rpc.port: 6123
        blob.server.port: 6124
        rest.address: ip2
        jobmanager.bind-host: 0.0.0.0
        taskmanager.bind-host: 0.0.0.0

  taskmanager1:
    image: pyflink:latest
    restart: always
    depends_on:
      - jobmanager1
    command: taskmanager
    ports:
      - "50101:50101"
    environment:
      - |
        FLINK_PROPERTIES=
        high-availability.type: zookeeper
        high-availability.storageDir: ./recovery
        high-availability.zookeeper.quorum: ip2:2181,ip1:2181,ip1:2182
        high-availability.zookeeper.path.root: /flink
        high-availability.cluster-id: /cluster
        jobmanager.rpc.address: ip2
        taskmanager.numberOfTaskSlots: 8
        taskmanager.data.bind-port: 50101

    volumes:
      - ./recovery:/opt/flink/recovery  # Mounting the recovery directory

  jobmanager2:
    image: pyflink:latest
    restart: always
    command: jobmanager
    ports:
      - "8081:8081"
      - "46987:46987"
    environment:
      - |
        FLINK_PROPERTIES=
        high-availability.type: zookeeper
        high-availability.storageDir: ./recovery
        high-availability.zookeeper.quorum: ip2:2181,ip1:2181,ip1:2182
        high-availability.zookeeper.path.root: /flink
        high-availability.cluster-id: /cluster
        jobmanager.rpc.address: ip1
        jobmanager.rpc.bind-port: 46987
        rest.address: ip1
        jobmanager.bind-host: 0.0.0.0
        taskmanager.bind-host: 0.0.0.0
    volumes:
       - ./recovery:/opt/flink/recovery  # Mounting the recovery directory
  taskmanager2:
    image: pyflink:latest
    restart: always
    depends_on:
      - jobmanager2
    command: taskmanager
    ports:
      - "50101:50101"
    environment:
      - |
        FLINK_PROPERTIES=
        high-availability.type: zookeeper
        high-availability.storageDir: ./recovery
        high-availability.zookeeper.quorum: ip2:2181,ip1:2181,ip1:2182
        high-availability.zookeeper.path.root: /flink
        high-availability.cluster-id: /cluster
        jobmanager.rpc.address: ip1
        taskmanager.numberOfTaskSlots: 8
        taskmanager.data.bind-port: 50101

    volumes:
      - ./recovery:/opt/flink/recovery  # Mounting the recovery directory

  ksqldb-server1:
    image: confluentinc/ksqldb-server:latest
    depends_on:
      - kafka
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksqldb"
      KSQL_BOOTSTRAP_SERVERS: "ip2:19092,ip1:19093"
      KSQL_HOST_NAME: "ip2"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_ADVERTISED_LISTENER: "ip2:8088"

  ksqldb-server2:
    image: confluentinc/ksqldb-server:latest
    depends_on:
      - kafka
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksqldb"
      KSQL_BOOTSTRAP_SERVERS: "ip2:19092,ip1:19093"
      KSQL_HOST_NAME: "ip1"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_ADVERTISED_LISTENER: "ip1:8088"
 
  ksqldb-cli:
    image: confluentinc/ksqldb-cli:latest
    depends_on:
      - ksqldb-server-1
    entrypoint: /bin/sh
    tty: true

